{
    "swagger": "2.0",
    "info": {
        "description": "API for record all meal that you have in each day and help you calculate summary nutrition in each meal and you can save favorite menu and favorite meal for track your diet easily and create your own menu",
        "title": "Nutrition Calculator API documentation",
        "contact": {},
        "version": "1.0.0"
    },
    "host": "go-nutritioncalculatorv2.onrender.com",
    "basePath": "/",
    "paths": {
        "/favlist/": {
            "put": {
                "description": "Update a `Favorite List`",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Favorite List"
                ],
                "summary": "Update a \"Favorite List\"",
                "parameters": [
                    {
                        "description": "`Favorite List`'s data detail that you want to update and can ignore the unchanged parameters",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.UpdateFavListRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "406": {
                        "description": "Request Body Not Acceptable"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "description": "Create a `Favorite List` for recording the daily meal easily",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Favorite List"
                ],
                "summary": "Create a \"Favorite List\"",
                "parameters": [
                    {
                        "description": "`Favorite List`'s data detail",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.NewFavListRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "406": {
                        "description": "Request Body Not Acceptable"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/favlist/{favlist_id}": {
            "delete": {
                "description": "Delete a `Favorite List`",
                "tags": [
                    "Favorite List"
                ],
                "summary": "Delete a \"Favorite List\"",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "`Favorite List`'s id that you want to delete",
                        "name": "favlist_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "406": {
                        "description": "Request Parameter Not Acceptable"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/favlist/{user_id}": {
            "get": {
                "description": "Get all `Favorite List` of the `User Id`",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Favorite List"
                ],
                "summary": "Get all \"Favorite List\" of the \"User Id\"",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User Id",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/service.FavListResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/menu/": {
            "get": {
                "description": "Get all 'Menu'",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Menu"
                ],
                "summary": "Get all \"Menu\"",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/service.menuResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "put": {
                "description": "Update a `Menu`",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Menu"
                ],
                "summary": "Update a \"Menu\"",
                "parameters": [
                    {
                        "description": "`Menu`'s data detail that you want to update and the unchanged parameters need to be input the old value",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.UpdateMenuRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "406": {
                        "description": "Request Body Not Acceptable"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "description": "Create a 'Menu'",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Menu"
                ],
                "summary": "Create a \"Menu\"",
                "parameters": [
                    {
                        "description": "`Menu`'s data detail",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.NewMenuRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "406": {
                        "description": "Request Body Not Acceptable"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/menu/{menu_id}": {
            "delete": {
                "description": "Delete a 'Menu'",
                "tags": [
                    "Menu"
                ],
                "summary": "Delete a \"Menu\"",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "`Menu`'s id that you want to delete",
                        "name": "menu_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "406": {
                        "description": "Request Parameter Not Acceptable"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/record/": {
            "put": {
                "description": "Update a 'Record'",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Record"
                ],
                "summary": "Update a \"Record\"",
                "parameters": [
                    {
                        "description": "`Record`'s data detail that you want to change to",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.UpdateRecordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "406": {
                        "description": "Request Body Not Acceptable or `Record`'s id is not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "description": "Create a 'Record'",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Record"
                ],
                "summary": "Create a \"Record\"",
                "parameters": [
                    {
                        "description": "`Record`'s data detail",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.NewRecordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "406": {
                        "description": "Request Body Not Acceptable"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/record/{record_id}": {
            "delete": {
                "description": "Delete a 'Record'",
                "tags": [
                    "Record"
                ],
                "summary": "Delete a \"Record\"",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "`Record`'s id that you want to delete",
                        "name": "record_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "406": {
                        "description": "Request parameters Not Acceptable"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/record/{user_id}": {
            "get": {
                "description": "Get all `Record` of `User` by `User Id`",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Record"
                ],
                "summary": "Get all \"Record\" of \"User\"",
                "parameters": [
                    {
                        "type": "string",
                        "description": "`User Id` that you want to get `Record`",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/service.RecordResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/recover/": {
            "put": {
                "description": "Get the deleted `Menu` off from `Favorite Menu` and {1. replace the deleted `Menu` in `Favorite List` with the new `Menu` that has the same detail (Can change the \"Menu\"'s name) / 2. get the deleted `Menu` off from `Favorite List`}",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Recover"
                ],
                "summary": "Recover a deleted \"Menu\"",
                "parameters": [
                    {
                        "description": "The data detail that you want",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.multiRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "406": {
                        "description": "Request Body Not Acceptable"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/user/": {
            "post": {
                "description": "Create a `User`",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Create a \"User\"",
                "parameters": [
                    {
                        "description": "`User`'s data detail",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.NewUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "406": {
                        "description": "Request Body Not Acceptable"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/user/login": {
            "put": {
                "description": "Check `User Id` and `Password` are correct or not",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Check \"User Id\" and \"Password\" are correct or not",
                "parameters": [
                    {
                        "description": "`User Id` and `Password`",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.LogInRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.LogInResponse"
                        }
                    },
                    "406": {
                        "description": "Request Body Not Acceptable"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/user/userdetail": {
            "put": {
                "description": "Update a `User`'s detail",
                "tags": [
                    "User"
                ],
                "summary": "Update a \"User\"'s detail",
                "parameters": [
                    {
                        "description": "`User`'s data detail that you want to update and can ignore the unchanged parameters",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.UpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "406": {
                        "description": "Request Body Not Acceptable or `User Id` is not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/user/{user_id}": {
            "get": {
                "description": "Get a `User`'s detail by `User Id`",
                "tags": [
                    "User"
                ],
                "summary": "Get a \"User\"'s detail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "`User Id`",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.userResponse"
                        }
                    },
                    "406": {
                        "description": "`User Id` is not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    },
    "definitions": {
        "handler.multiRequest": {
            "type": "object",
            "required": [
                "deleted_menu_id",
                "is_create",
                "user_id"
            ],
            "properties": {
                "deleted_menu_id": {
                    "description": "\"Menu\"'s id that was deleted",
                    "type": "integer",
                    "example": 9
                },
                "is_create": {
                    "description": "1 = Want to create new \"Menu\" for replace \"Menu\" in the \"Favorite List\", 0 = Dont want to create new \"Menu\" so the \"Favorite List\" that contain the deleted \"Menu\" will be updated by get the \"Menu\" off",
                    "type": "integer",
                    "example": 1
                },
                "new_menu_name": {
                    "description": "New name of recovered \"Menu\"",
                    "type": "string",
                    "example": "Moo Yang V2"
                },
                "user_id": {
                    "description": "\"User Id\" that want to recover the deleted \"Menu\"",
                    "type": "string",
                    "example": "gooddy20"
                }
            }
        },
        "service.FavListResponse": {
            "type": "object",
            "properties": {
                "carb": {
                    "description": "Total carb (g.) in the \"Favorite List\"",
                    "type": "number",
                    "example": 20
                },
                "fat": {
                    "description": "Total fat (g.) in the \"Favorite List\"",
                    "type": "number",
                    "example": 10
                },
                "id": {
                    "description": "\"Favorite List\"'s id that generate by system",
                    "type": "integer",
                    "example": 1
                },
                "is_updated": {
                    "description": "1 = All \"Menu\" in the \"Favorite List\" are up to date, 0 = atleast one \"Menu\" in the \"Favorite List\" are not up to date",
                    "type": "integer",
                    "example": 1
                },
                "list": {
                    "description": "Summary meal with \"Menu\"'s id e.g. \"9,9,10\" -\u003e 9 = \"Moo Yang\" and 10 = \"Sticky Rice\" so the \"Favorite List\" contain \"Moo Yang\" 2 ea and \"Sticky Rice\" 1 ea",
                    "type": "string",
                    "example": "9,9,10"
                },
                "menues": {
                    "description": "Summary each \"Menu\"'s name and amount of the \"Favorite List\"",
                    "type": "string",
                    "example": "Moo Yang-2, Sticky Rice-1 "
                },
                "name": {
                    "description": "Name of \"Favorite List\" that named by the user",
                    "type": "string",
                    "example": "Daily Breakfast"
                },
                "protein": {
                    "description": "Total protein (g.) in the \"Favorite List\"",
                    "type": "number",
                    "example": 40
                }
            }
        },
        "service.LogInRequest": {
            "type": "object",
            "required": [
                "password",
                "user_id"
            ],
            "properties": {
                "password": {
                    "description": "\"Password\"",
                    "type": "string",
                    "example": "zxc123zxc123"
                },
                "user_id": {
                    "description": "\"User Id\"",
                    "type": "string",
                    "example": "gooddy20"
                }
            }
        },
        "service.LogInResponse": {
            "type": "object",
            "properties": {
                "IsLogIn": {
                    "description": "\"true\" = Pass, \"false\" = Incorrect \"User Id\" or \"Password\"",
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "service.NewFavListRequest": {
            "type": "object",
            "required": [
                "list",
                "name",
                "user_id"
            ],
            "properties": {
                "list": {
                    "description": "Summary meal with \"Menu\"'s id  e.g. \"9,9,10\" -\u003e 9 = \"Moo Yang\" and 10 = \"Sticky Rice\" so the \"Favorite List\" contain \"Moo Yang\" 2 ea and \"Sticky Rice\" 1 ea",
                    "type": "string",
                    "example": "9,9,10"
                },
                "name": {
                    "description": "The name of this \"Favorite List\"",
                    "type": "string",
                    "example": "Daily Breakfast"
                },
                "user_id": {
                    "description": "The \"User Id\" that create this \"Favorite List\"",
                    "type": "string",
                    "example": "gooddy20"
                }
            }
        },
        "service.NewMenuRequest": {
            "type": "object",
            "required": [
                "carb",
                "creator_id",
                "fat",
                "name",
                "protein"
            ],
            "properties": {
                "carb": {
                    "description": "Carb (g.) of this \"Menu\"",
                    "type": "number",
                    "example": 0
                },
                "creator_id": {
                    "description": "\"User Id\" that create this \"Menu\"",
                    "type": "string",
                    "example": "gooddy20"
                },
                "fat": {
                    "description": "Fat (g.) of this \"Menu\"",
                    "type": "number",
                    "example": 0.5
                },
                "name": {
                    "description": "Name of this \"Menu\"",
                    "type": "string",
                    "example": "7-11 Pepper Chicken Breast"
                },
                "protein": {
                    "description": "Protein (g.) of this \"Menu\"",
                    "type": "number",
                    "example": 19
                }
            }
        },
        "service.NewRecordRequest": {
            "type": "object",
            "required": [
                "event_timestamp",
                "list",
                "user_id"
            ],
            "properties": {
                "event_timestamp": {
                    "description": "Timestamp that you eat *format=\"2023-01-01 00:00:00\"",
                    "type": "string",
                    "example": "2023-11-01 09:30:00"
                },
                "list": {
                    "description": "Summary meal with \"Menu\"'s id e.g. \"9,9,10\" -\u003e 9 = \"Moo Yang\" and 10 = \"Sticky Rice\" so the \"Record\" contain \"Moo Yang\" 2 ea and \"Sticky Rice\" 1 ea",
                    "type": "string",
                    "example": "9,9,10"
                },
                "note": {
                    "description": "Note for this \"Record\"",
                    "type": "string",
                    "example": "Breakfast"
                },
                "user_id": {
                    "description": "\"User Id\" that create this \"Record\"",
                    "type": "string",
                    "example": "gooddy20"
                },
                "weight": {
                    "description": "Weight (kg.) that you are on that day",
                    "type": "number",
                    "example": 63
                }
            }
        },
        "service.NewUserRequest": {
            "type": "object",
            "required": [
                "password",
                "user_id",
                "username"
            ],
            "properties": {
                "carb": {
                    "description": "Default carb (g.) of the \"User\"",
                    "type": "number",
                    "example": 120
                },
                "fat": {
                    "description": "Default fat (g.) of the \"User\"",
                    "type": "number",
                    "example": 60
                },
                "password": {
                    "description": "\"Password\"",
                    "type": "string",
                    "example": "zxc123zxc123"
                },
                "protein": {
                    "description": "Default protein (g.) of the \"User\"",
                    "type": "number",
                    "example": 120
                },
                "user_id": {
                    "description": "\"User Id\"",
                    "type": "string",
                    "example": "gooddy20"
                },
                "username": {
                    "description": "\"Username\"",
                    "type": "string",
                    "example": "GoodDy"
                },
                "weight": {
                    "description": "Default weight (kg.) of the \"User\"",
                    "type": "number",
                    "example": 70
                }
            }
        },
        "service.RecordResponse": {
            "type": "object",
            "properties": {
                "carb": {
                    "description": "Total carb (g.) of the \"Record\"",
                    "type": "number"
                },
                "eventTimestamp": {
                    "description": "Timestamp that you eat *format=\"2023-01-01 00:00:00\"",
                    "type": "string"
                },
                "fat": {
                    "description": "Total fat (g.) of the \"Record\"",
                    "type": "number"
                },
                "id": {
                    "description": "\"Record\"'s id",
                    "type": "integer"
                },
                "isUpdated": {
                    "description": "1 = All \"Menu\" in the \"Record\" are up to date, 0 = atleast one \"Menu\" in the \"Record\" are not up to date",
                    "type": "integer"
                },
                "list": {
                    "description": "Summary meal with \"Menu\"'s id e.g. \"9,9,10\" -\u003e 9 = \"Moo Yang\" and 10 = \"Sticky Rice\" so the \"Record\" contain \"Moo Yang\" 2 ea and \"Sticky Rice\" 1 ea",
                    "type": "string"
                },
                "note": {
                    "description": "Note for the \"Record\"",
                    "type": "string"
                },
                "protein": {
                    "description": "Total protein (g.) of the \"Record\"",
                    "type": "number"
                },
                "weight": {
                    "description": "Weight (kg.) that you are on that day",
                    "type": "number"
                }
            }
        },
        "service.UpdateFavListRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "description": "The \"Favorite List\"'s id that is updated",
                    "type": "integer",
                    "example": 1
                },
                "list": {
                    "description": "Summary meal with \"Menu\"'s id that you want to change e.g. \"9,9,10\" -\u003e 9 = \"Moo Yang\" and 10 = \"Sticky Rice\" so the \"Favorite List\" contain \"Moo Yang\" 2 ea and \"Sticky Rice\" 1 ea",
                    "type": "string",
                    "example": "9,10"
                },
                "name": {
                    "description": "The name that you want to change to",
                    "type": "string",
                    "example": "Daily Breakfast"
                }
            }
        },
        "service.UpdateMenuRequest": {
            "type": "object",
            "required": [
                "carb",
                "fat",
                "id",
                "name",
                "protein"
            ],
            "properties": {
                "carb": {
                    "description": "The carb (g.) that you want to change to",
                    "type": "number",
                    "example": 1
                },
                "fat": {
                    "description": "The fat (g.) that you want to change to",
                    "type": "number",
                    "example": 0.5
                },
                "id": {
                    "description": "\"Menu\"'s id that you want to update",
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "description": "The name that you want to change to",
                    "type": "string",
                    "example": "7-11 Chilli Chicken Breast"
                },
                "protein": {
                    "description": "The protein (g.) that you want to change to",
                    "type": "number",
                    "example": 20
                }
            }
        },
        "service.UpdateRecordRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "event_timestamp": {
                    "description": "Timestamp that you want to change to *format=\"2023-01-01 00:00:00\"",
                    "type": "string",
                    "example": "2023-11-01 12:30:00"
                },
                "id": {
                    "description": "\"Record\"'s id that you want to update",
                    "type": "integer",
                    "example": 1
                },
                "list": {
                    "description": "Summary meal with \"Menu\"'s id that you want to change to e.g. \"9,9,10\" -\u003e 9 = \"Moo Yang\" and 10 = \"Sticky Rice\" so the \"Record\" contain \"Moo Yang\" 2 ea and \"Sticky Rice\" 1 ea",
                    "type": "string",
                    "example": "9,9,10"
                },
                "note": {
                    "description": "Note that you want to change to",
                    "type": "string",
                    "example": "Lunch"
                },
                "weight": {
                    "description": "Weight (kg.) that you want to change to",
                    "type": "number",
                    "example": 63
                }
            }
        },
        "service.UpdateUserRequest": {
            "type": "object",
            "required": [
                "user_id"
            ],
            "properties": {
                "carb": {
                    "description": "Carb that you want to change to",
                    "type": "number",
                    "example": 160
                },
                "fat": {
                    "description": "Fat (g.) that you want to change to",
                    "type": "number",
                    "example": 70
                },
                "favorite_menues": {
                    "description": "Favorite Menues's id that you want to change to e.g. \"9,10\" 9 = \"Moo Yang\" and 10 = \"Sticky Rice\" so this \"User\" got \"Moo Yang\" and \"Sticky Rice\" as \"Favorite Menu\"",
                    "type": "string",
                    "example": "4,7,9,10,11"
                },
                "password": {
                    "description": "\"Password\" that you want to change",
                    "type": "string",
                    "example": "zxc123zxc456"
                },
                "protein": {
                    "description": "Protein (g.) that you want to change to",
                    "type": "number",
                    "example": 150
                },
                "user_id": {
                    "description": "\"User Id\"",
                    "type": "string",
                    "example": "gooddy20"
                },
                "username": {
                    "description": "\"Username\" that you want to change to",
                    "type": "string",
                    "example": "GooDDy19"
                },
                "weight": {
                    "description": "Weight (kg.) that you want to change to",
                    "type": "number",
                    "example": 72
                }
            }
        },
        "service.menuResponse": {
            "type": "object",
            "properties": {
                "carb": {
                    "description": "Carb of \"Menu\"",
                    "type": "number",
                    "example": 0
                },
                "creator_id": {
                    "description": "\"User Id\" that create the \"Menu\"",
                    "type": "string",
                    "example": "gooddy20"
                },
                "creator_name": {
                    "description": "\"Username\" that create the \"Menu\"",
                    "type": "string",
                    "example": "GoodDy"
                },
                "fat": {
                    "description": "Fat of \"Menu\"",
                    "type": "number",
                    "example": 5
                },
                "id": {
                    "description": "\"Menu\"'s id that generate by system",
                    "type": "integer",
                    "example": 9
                },
                "like": {
                    "description": "Amount of using as favorite menu by \"User Id\"",
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "description": "Name of \"Menu\" that named by the user",
                    "type": "string",
                    "example": "Moo Yang"
                },
                "protein": {
                    "description": "Protein of \"Menu\"",
                    "type": "number",
                    "example": 20
                },
                "status": {
                    "description": "1 = Active, 0 = Deleted",
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "service.userResponse": {
            "type": "object",
            "properties": {
                "carb": {
                    "description": "Default carb (g.) of the \"User\"",
                    "type": "number",
                    "example": 130
                },
                "fat": {
                    "description": "Default fat (g.) of the \"User\"",
                    "type": "number",
                    "example": 40
                },
                "favorite_menues": {
                    "description": "Favorite Menues's id e.g. \"9,10\" 9 = \"Moo Yang\" and 10 = \"Sticky Rice\" so this \"User\" got \"Moo Yang\" and \"Sticky Rice\" as \"Favorite Menu\"",
                    "type": "string",
                    "example": "9,10"
                },
                "protein": {
                    "description": "Default protein (g.) of the \"User\"",
                    "type": "number",
                    "example": 140
                },
                "username": {
                    "description": "\"Username\"",
                    "type": "string",
                    "example": "GoodDy"
                },
                "weight": {
                    "description": "Default weight (kg.) of the \"User\"",
                    "type": "number",
                    "example": 62
                }
            }
        }
    }
}